// <auto-generated />
using System;
using Data_Access_Layer.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access_Layer.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20240220081723_dbolustur")]
    partial class dbolustur
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AkilliKlimaKonut", b =>
                {
                    b.Property<int>("AkilliKlimalarId")
                        .HasColumnType("int");

                    b.Property<int>("KonutlarId")
                        .HasColumnType("int");

                    b.HasKey("AkilliKlimalarId", "KonutlarId");

                    b.HasIndex("KonutlarId");

                    b.ToTable("AkilliKlimaKonut");
                });

            modelBuilder.Entity("AkilliPerdeKonut", b =>
                {
                    b.Property<int>("AkilliPerdelerId")
                        .HasColumnType("int");

                    b.Property<int>("KonutlarId")
                        .HasColumnType("int");

                    b.HasKey("AkilliPerdelerId", "KonutlarId");

                    b.HasIndex("KonutlarId");

                    b.ToTable("AkilliPerdeKonut");
                });

            modelBuilder.Entity("Entity_Layer.Entities.Concrete.AkilliKlima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EnerjiSinifi")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Fiyat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("AkilliKlimalar");
                });

            modelBuilder.Entity("Entity_Layer.Entities.Concrete.AkilliPerde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Boy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("En")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fiyat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaplamaMaddesi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("AkilliPerdeler");
                });

            modelBuilder.Entity("Entity_Layer.Entities.Concrete.Konut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<byte>("KonutTip")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("Konut");
                });

            modelBuilder.Entity("AkilliKlimaKonut", b =>
                {
                    b.HasOne("Entity_Layer.Entities.Concrete.AkilliKlima", null)
                        .WithMany()
                        .HasForeignKey("AkilliKlimalarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity_Layer.Entities.Concrete.Konut", null)
                        .WithMany()
                        .HasForeignKey("KonutlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AkilliPerdeKonut", b =>
                {
                    b.HasOne("Entity_Layer.Entities.Concrete.AkilliPerde", null)
                        .WithMany()
                        .HasForeignKey("AkilliPerdelerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity_Layer.Entities.Concrete.Konut", null)
                        .WithMany()
                        .HasForeignKey("KonutlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
