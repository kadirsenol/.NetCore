// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Table_Per_Type_TPT__for_Entity_Framework;

#nullable disable

namespace Table_Per_Hierarchy__TPH__for_Entity_Framework.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Table_Per_Hierarchy__TPH__for_Entity_Framework.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehicle");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Table_Per_Hierarchy__TPH__for_Entity_Framework.Car", b =>
                {
                    b.HasBaseType("Table_Per_Hierarchy__TPH__for_Entity_Framework.Vehicle");

                    b.Property<int>("TrunkSizeInCm3")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Car");
                });

            modelBuilder.Entity("Table_Per_Hierarchy__TPH__for_Entity_Framework.Motorcycle", b =>
                {
                    b.HasBaseType("Table_Per_Hierarchy__TPH__for_Entity_Framework.Vehicle");

                    b.Property<byte>("RacingClass")
                        .HasColumnType("tinyint");

                    b.HasDiscriminator().HasValue("Motorcycle");
                });
#pragma warning restore 612, 618
        }
    }
}
